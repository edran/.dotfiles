#!/usr/bin/env bash

# Don't run if not interactive
[ -z "$PS1" ] && return

# Don't save duplicates and space-prefixed commands
HISTCONTROL=ignoreboth

# When exiting the shell, append the history instead of overwriting it
shopt -s histappend

export HISTTIMEFORMAT="%h %d %H:%M:%S> "

# Update rows/columns with windows size changes
shopt -s checkwinsize

# Frendlier less for non-text input
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set working chroot
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# Force colors in bash
case "$TERM" in
    xterm-color) color_prompt=yes;;
    rvxt-unicode-256-color) color_prompt=yes;;
esac
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	color_prompt=yes
    else
	color_prompt=
    fi
fi

# completion ###########################################################

if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

_pip_completion()
{
    COMPREPLY=( $( COMP_WORDS="${COMP_WORDS[*]}" \
                   COMP_CWORD=$COMP_CWORD \
                   PIP_AUTO_COMPLETE=1 $1 ) )
}
complete -o default -F _pip_completion pip


# Prompt ###############################################################

START_PART="\[\e[1;31m\]["
END_PART="\[\e[1;31m\]]\[\e[0;0m\] "
PWD_PART="\[\e[0;33m\]\w"
HOST_PART="\[\e[0;32m\]\h"
USER_PART="\[\e[0;34m\]\u"
AT_PART="\[\e[0;37m\]@"
COL_PART="\[\e[0;37m\]:"
PS1="$START_PART$USER_PART$AT_PART$HOST_PART$COL_PART$PWD_PART$END_PART"

if [ -f $HOME/.dotfiles/vendor/bash-git-prompt/gitprompt.sh ]; then
  GIT_PROMPT_ONLY_IN_REPO=1
  GIT_PROMPT_LEADING_SPACE=0
  GIT_PROMPT_PREFIX="\[\e[1;34m\]["
  GIT_PROMPT_SUFFIX="\[\e[1;34m\]]"
  GIT_PROMPT_SEPARATOR="\[\e[0;37m\]|"
  GIT_PROMPT_THEME=Single_line
  GIT_PROMPT_START="$PS1"
  source $HOME/.dotfiles/vendor/bash-git-prompt/gitprompt.sh
fi

# Enhance ##############################################################

if [ -d "$HOME/.dotfiles/dots/bash_functions" ]; then
    for file in $HOME/.dotfiles/dots/bash_functions/*; do
        source "$file"
    done
fi

if [ -f "$HOME/.dotfiles/dots/bash_aliases" ]; then
    source $HOME/.dotfiles/dots/bash_aliases
fi

# External #############################################################

if [ -d "$HOME/.dotfiles/vendor/z" ] ; then
    source $HOME/.dotfiles/vendor/z/z.sh
fi

if [ -x "/usr/local/bin/virtualenvwrapper.sh" ] ; then
    source /usr/local/bin/virtualenvwrapper.sh
fi

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
fi

if command -v pipenv 1>/dev/null 2>&1; then
    eval "$(pipenv --completion)"
fi
