# zsh sourcing
# +----------------+-----------+-----------+------+
# |                |Interactive|Interactive|Script|
# |                |login      |non-login  |      |
# +----------------+-----------+-----------+------+
# |/etc/zshenv     |    A      |    A      |  A   |
# +----------------+-----------+-----------+------+
# |~/.zshenv       |    B      |    B      |  B   |
# +----------------+-----------+-----------+------+
# |/etc/zprofile   |    C      |           |      |
# +----------------+-----------+-----------+------+
# |~/.zprofile     |    D      |           |      |
# +----------------+-----------+-----------+------+
# |/etc/zshrc      |    E      |    C      |      |
# +----------------+-----------+-----------+------+
# |~/.zshrc        |    F      |    D      |      |  # or .profile if not present
# +----------------+-----------+-----------+------+
# |/etc/zlogin     |    G      |           |      |
# +----------------+-----------+-----------+------+
# |~/.zlogin       |    H      |           |      |
# +----------------+-----------+-----------+------+
# +----------------+-----------+-----------+------+
# |~/.zlogout      |    I      |           |      |
# +----------------+-----------+-----------+------+
# |/etc/zlogout    |    J      |           |      |
# +----------------+-----------+-----------+------+
# Taken from https://medium.com/@rajsek/zsh-bash-startup-files-loading-order-bashrc-zshrc-etc-e30045652f2e
#
# tl;dr - for zsh one should always put stuff into zshrc;
#         use bash / sh directly for scripts + ssh
# In particular, PATH gets modified by /etc/zprofile on MacOS, so zshenv should
# not be relied upon (what a shitshow).

# NOTE: This needs to stay at the top of .zshrc
source ~/.profile


# ###########
# # History #
# ###########

function omz_history {
  local clear list
  zparseopts -E c=clear l=list

  if [[ -n "$clear" ]]; then
    # if -c provided, clobber the history file
    echo -n >| "$HISTFILE"
    echo >&2 History file deleted. Reload the session to see its effects.
  elif [[ -n "$list" ]]; then
    # if -l provided, run as if calling `fc' directly
    builtin fc "$@"
  else
    # unless a number is provided, show all history events (starting from 1)
    [[ ${@[-1]} = *[0-9]* ]] && builtin fc -l "$@" || builtin fc -l "$@" 1
  fi
}

## History file configuration
[ -z "$HISTFILE" ] && HISTFILE="$HOME/.zsh_history"
## History command configuration
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt inc_append_history     # add commands to HISTFILE in order of execution
setopt share_history          # share command history data


# ###########
# # Plugins #
# ###########

# fuzzy finder
if [[ -f "$HOME/.fzf.zsh" ]]; then
    source ~/.fzf.zsh
fi

if [[ $IS_MACOS == 1 && -f "$HOME/.iterm2_shell_integration.zsh" ]]; then
    source ~/.iterm2_shell_integration.zsh
fi

source "$HOME/.conda/etc/profile.d/conda.sh"
source "$HOME/.zsh_plugins.sh"


# ###############
# # Keybindings #
# ###############

# fix del key
bindkey "^[[3~"  delete-char
bindkey "^[3;5~" delete-char


# ###########
# # Aliases #
# ###########

alias history="omz_history -i"
alias ppath="printf \"%s\n\" $path"

if [ -x "$(command -v exa)" ]; then
    alias ls="exa"
    alias l="exa -F"
    alias ll="exa -l"
fi
