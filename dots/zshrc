# -*- mode: sh; -*-
# zsh sourcing
# +----------------+-----------+-----------+------+
# |                |Interactive|Interactive|Script|
# |                |login      |non-login  |      |
# +----------------+-----------+-----------+------+
# |/etc/zshenv     |    A      |    A      |  A   |
# +----------------+-----------+-----------+------+
# |~/.zshenv       |    B      |    B      |  B   |
# +----------------+-----------+-----------+------+
# |/etc/zprofile   |    C      |           |      |
# +----------------+-----------+-----------+------+
# |~/.zprofile     |    D      |           |      |
# +----------------+-----------+-----------+------+
# |/etc/zshrc      |    E      |    C      |      |
# +----------------+-----------+-----------+------+
# |~/.zshrc        |    F      |    D      |      |  # or .profile if not present
# +----------------+-----------+-----------+------+
# |/etc/zlogin     |    G      |           |      |
# +----------------+-----------+-----------+------+
# |~/.zlogin       |    H      |           |      |
# +----------------+-----------+-----------+------+
# +----------------+-----------+-----------+------+
# |~/.zlogout      |    I      |           |      |
# +----------------+-----------+-----------+------+
# |/etc/zlogout    |    J      |           |      |
# +----------------+-----------+-----------+------+
# Taken from https://medium.com/@rajsek/zsh-bash-startup-files-loading-order-bashrc-zshrc-etc-e30045652f2e
#
# tl;dr - for zsh one should always put stuff into zshrc;
#         use bash / sh directly for scripts + ssh
# In particular, PATH gets modified by /etc/zprofile on MacOS, so zshenv should
# not be relied upon (what a shitshow).

# NOTE: This needs to stay at the top of .zshrc
. /etc/profile
. ~/.profile

# deals with ssh agent / passphrase
if type keychain &>/dev/null; then
    eval `keychain --eval --agents ssh --inherit any --quiet id_rsa`
fi

# ###########
# # History #
# ###########

function omz_history {
  local clear list
  zparseopts -E c=clear l=list

  if [[ -n "$clear" ]]; then
    # if -c provided, clobber the history file
    echo -n >| "$HISTFILE"
    echo >&2 History file deleted. Reload the session to see its effects.
  elif [[ -n "$list" ]]; then
    # if -l provided, run as if calling `fc' directly
    builtin fc "$@"
  else
    # unless a number is provided, show all history events (starting from 1)
    [[ ${@[-1]} = *[0-9]* ]] && builtin fc -l "$@" || builtin fc -l "$@" 1
  fi
}

# History file configuration
[ -z "$HISTFILE" ] && HISTFILE="$HOME/.zsh_history"
export HISTSIZE=50000
export SAVEHIST=10000

## History command configuration
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt inc_append_history     # add commands to HISTFILE in order of execution
setopt share_history          # share command history data

# QoL

setopt interactivecomments    # Enable bash / sh inline comments
setopt ignoreeof              # Disable ctrl-d


# ###########
# # Plugins #
# ###########

# fuzzy finder
if [[ -f ~/.fzf.zsh ]] . ~/.fzf.zsh

if [[ $IS_MACOS == 1 && -f "$HOME/.iterm2_shell_integration.zsh" ]]; then
    . ~/.iterm2_shell_integration.zsh
fi

eval $(thefuck --alias)

# This will heavily change the path :(
. ~/.zsh_plugins.sh

if type direnv &>/dev/null; then
    eval "$(direnv hook zsh)"
fi

if type brew &>/dev/null; then
    . $(brew --prefix asdf)/asdf.sh
fi


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('$HOME/.conda/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/.conda/etc/profile.d/conda.sh" ]; then
        . "$HOME/.conda/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/.conda/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<


# ###############
# # Keybindings #
# ###############

# fix del key
bindkey -e
bindkey "^[[3~"  delete-char
bindkey "^[3;5~" delete-char


# ###########
# # Aliases #
# ###########

alias history="omz_history -i"
alias ppath="printf \"%s\n\" $path"
alias j="z"

if [ -x "$(command -v exa)" ]; then
    alias ls="exa -s type"
    alias l="exa -Fs type"
    alias ll="exa -ls type"
fi

# _dev is prefixed to make it always session 0 in list
alias t="tmux attach || tmux new -s _dev"
alias ta="tmux attach -t"
alias tn="tmux new -s"
alias td="tmux new -d -s"
alias tl="tmux list-sessions"

alias ca="conda activate"

alias json="python -m json.tool"

ipdb() {
  ipython --pdb -c "%run $*"
}
# ##################
# # Autocompletion #
# ##################

autoload -Uz compaudit compinit
zstyle :compinstall filename '$HOME/.zshrc'

# homebrew autocomplete
if type brew &>/dev/null; then
    FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi
compinit


# #######
# # End #
# #######

# Tramp needs a straightforward PS1, so we set it here at the end
[[ $TERM == "dumb" ]] && unsetopt zle && PS1='$ ' && return

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/nantas/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/nantas/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/nantas/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/nantas/google-cloud-sdk/completion.zsh.inc'; fi
